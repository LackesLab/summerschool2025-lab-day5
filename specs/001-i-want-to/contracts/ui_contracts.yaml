openapi: 3.0.3
info:
  title: Multi-Agent AI System - UI Contracts
  description: Chainlit interface contracts for user interactions and real-time updates
  version: 1.0.0

paths:
  /chat/submit_feature:
    post:
      summary: Submit new feature request via chat interface
      operationId: submitFeatureRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_input
                - session_id
              properties:
                user_input:
                  type: string
                  maxLength: 2000
                  description: Natural language feature description
                session_id:
                  type: string
                  format: uuid
                  description: Student session identifier
                priority:
                  type: string
                  enum: [low, medium, high]
                  default: medium
      responses:
        '200':
          description: Feature request accepted and processing started
          content:
            application/json:
              schema:
                type: object
                required:
                  - feature_request_id
                  - status
                  - message
                properties:
                  feature_request_id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum: [accepted, needs_clarification]
                  message:
                    type: string
                    description: Initial response to user
                  workflow_id:
                    type: string
                    format: uuid
                  estimated_completion_time:
                    type: string
                    format: date-time

  /chat/answer_clarification:
    post:
      summary: Submit answers to clarification questions
      operationId: answerClarification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - feature_request_id
                - answers
              properties:
                feature_request_id:
                  type: string
                  format: uuid
                answers:
                  type: array
                  items:
                    type: object
                    required:
                      - question_id
                      - answer
                    properties:
                      question_id:
                        type: string
                      answer:
                        type: string
                        maxLength: 500
                      confidence:
                        type: string
                        enum: [certain, likely, uncertain]
      responses:
        '200':
          description: Answers processed, workflow continuing
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - message
                properties:
                  status:
                    type: string
                    enum: [processing, needs_more_clarification, complete]
                  message:
                    type: string
                  additional_questions:
                    type: array
                    items:
                      type: object
                      properties:
                        question_id:
                          type: string
                        question:
                          type: string
                        category:
                          type: string

  /workflow/status:
    get:
      summary: Get current workflow status and progress
      operationId: getWorkflowStatus
      parameters:
        - name: workflow_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Current workflow status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStatus'

  /documents/download:
    get:
      summary: Download generated document
      operationId: downloadDocument
      parameters:
        - name: document_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: query
          schema:
            type: string
            enum: [markdown, pdf, html]
            default: markdown
      responses:
        '200':
          description: Document content
          content:
            text/markdown:
              schema:
                type: string
            application/pdf:
              schema:
                type: string
                format: binary
            text/html:
              schema:
                type: string

  /documents/list:
    get:
      summary: List all generated documents for a feature request
      operationId: listDocuments
      parameters:
        - name: feature_request_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of available documents
          content:
            application/json:
              schema:
                type: object
                required:
                  - documents
                properties:
                  documents:
                    type: array
                    items:
                      type: object
                      required:
                        - document_id
                        - title
                        - type
                        - created_at
                        - file_path
                      properties:
                        document_id:
                          type: string
                          format: uuid
                        title:
                          type: string
                        type:
                          type: string
                          enum: [requirements, technical_analysis, product_review, implementation_guide, test_strategy]
                        created_at:
                          type: string
                          format: date-time
                        file_path:
                          type: string
                        version:
                          type: integer
                        size_bytes:
                          type: integer

# WebSocket Events for Real-time Updates
websocket_events:
  agent_status_update:
    description: Real-time agent status changes
    payload:
      type: object
      required:
        - event_type
        - workflow_id
        - agent_status
      properties:
        event_type:
          type: string
          enum: [agent_started, agent_progress, agent_completed, agent_failed]
        workflow_id:
          type: string
          format: uuid
        agent_status:
          $ref: '#/components/schemas/AgentStatus'
        timestamp:
          type: string
          format: date-time

  document_generated:
    description: Notification when new document is created
    payload:
      type: object
      required:
        - event_type
        - workflow_id
        - document
      properties:
        event_type:
          type: string
          const: document_generated
        workflow_id:
          type: string
          format: uuid
        document:
          type: object
          required:
            - document_id
            - title
            - type
            - preview
          properties:
            document_id:
              type: string
              format: uuid
            title:
              type: string
            type:
              type: string
              enum: [requirements, technical_analysis, product_review, implementation_guide, test_strategy]
            preview:
              type: string
              maxLength: 200
              description: First 200 characters of document
            download_url:
              type: string

  workflow_completed:
    description: Notification when entire workflow finishes
    payload:
      type: object
      required:
        - event_type
        - workflow_id
        - final_status
        - summary
      properties:
        event_type:
          type: string
          const: workflow_completed
        workflow_id:
          type: string
          format: uuid
        final_status:
          type: string
          enum: [success, partial_success, failed]
        summary:
          type: object
          required:
            - total_duration
            - documents_generated
            - success_rate
          properties:
            total_duration:
              type: number
              description: Total seconds from start to completion
            documents_generated:
              type: integer
            success_rate:
              type: number
              minimum: 0
              maximum: 1
              description: Percentage of agents that completed successfully
            key_insights:
              type: array
              items:
                type: string
              maxItems: 5

  error_occurred:
    description: Notification when errors occur during processing
    payload:
      type: object
      required:
        - event_type
        - workflow_id
        - error
      properties:
        event_type:
          type: string
          const: error_occurred
        workflow_id:
          type: string
          format: uuid
        error:
          type: object
          required:
            - error_code
            - message
            - affected_agent
          properties:
            error_code:
              type: string
              enum: [AGENT_TIMEOUT, LLM_API_ERROR, FILE_WRITE_ERROR, VALIDATION_ERROR]
            message:
              type: string
            affected_agent:
              type: string
              enum: [clarification, requirements, technical, product, testing]
            recovery_action:
              type: string
              enum: [retry_automatically, manual_intervention_required, skip_agent]
            retry_count:
              type: integer

components:
  schemas:
    AgentStatus:
      type: object
      required:
        - agent_id
        - role
        - status
        - current_task
      properties:
        agent_id:
          type: string
          format: uuid
        role:
          type: string
          enum: [clarification, requirements, technical, product, testing]
        status:
          type: string
          enum: [idle, active, completed, error]
        current_task:
          type: string
        progress_percentage:
          type: number
          minimum: 0
          maximum: 100
        estimated_completion:
          type: string
          format: date-time
        last_output:
          type: string
          description: Latest agent output for real-time display

    WorkflowStatus:
      type: object
      required:
        - workflow_id
        - feature_request_id
        - current_stage
        - overall_status
        - progress_percentage
      properties:
        workflow_id:
          type: string
          format: uuid
        feature_request_id:
          type: string
          format: uuid
        current_stage:
          type: string
          enum: [clarification, requirements, analysis, review, testing, completed]
        overall_status:
          type: string
          enum: [running, completed, failed, paused]
        progress_percentage:
          type: number
          minimum: 0
          maximum: 100
        estimated_completion:
          type: string
          format: date-time
        stages:
          type: array
          items:
            type: object
            required:
              - name
              - status
            properties:
              name:
                type: string
              status:
                type: string
                enum: [pending, active, completed, failed]
              agent_id:
                type: string
                format: uuid
              started_at:
                type: string
                format: date-time
              completed_at:
                type: string
                format: date-time
              output_summary:
                type: string
                description: Brief summary of stage output

    ChatMessage:
      type: object
      required:
        - message_id
        - content
        - timestamp
        - sender
      properties:
        message_id:
          type: string
          format: uuid
        content:
          type: string
        timestamp:
          type: string
          format: date-time
        sender:
          type: string
          enum: [user, system, clarification_agent, requirements_agent, technical_agent, product_agent, testing_agent]
        message_type:
          type: string
          enum: [user_input, clarification_question, status_update, document_notification, error_message]
        metadata:
          type: object
          properties:
            workflow_id:
              type: string
              format: uuid
            document_reference:
              type: string
              format: uuid
            requires_response:
              type: boolean

    SessionInfo:
      type: object
      required:
        - session_id
        - started_at
        - last_activity
      properties:
        session_id:
          type: string
          format: uuid
        student_name:
          type: string
        started_at:
          type: string
          format: date-time
        last_activity:
          type: string
          format: date-time
        active_workflows:
          type: array
          items:
            type: string
            format: uuid
        completed_features:
          type: integer
        learning_progress:
          type: array
          items:
            type: object
            properties:
              milestone:
                type: string
              completed_at:
                type: string
                format: date-time